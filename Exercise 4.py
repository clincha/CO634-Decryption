from collections import Counter

import CipherUtils

ENCRYPTED = "SAOCZVUDWKKXGTJFOXVJCEDWKIRYDSAOXIKTBOCOPMDXSGYOTSGJDDYKTUXTVUMWGQYYKKTCRXIJZRTVTKCTTVGXSVTOYGZKSOHINUCTJCYSUOVTOKKTNKSHGKXLNGTOKKTNOHAIMOHZGJDWGVZRTEUNYJRFROPBGZRTOTYRTRVKBPTFMYUUTCKGJUZYLGTJCHUWZRPSRZYCUTRYCJQTCWKUNYLKFGCIXCTQTAPCSARKTQCKUYDDSQBOLNAYRDANJGTVWZKCKPJDDGNRDWGVYCLKGZKCJNUFTRAYRTJGVBTICZOSCJGDBAUZMDSGCSAREUWTGPJVDUMOXVZJXYJMJZRTYJADIKTIRXTMGVAOUZBDADRODAVYSSKVNOGKKTCXJGNOGKEUXIKPZRTVGKZTJQADPRUUSICCYAJOVKDGAGCSINKTGPYCLPTIVOYCAPOYCKTXYGLQXQXBGTYJZUONTCCYDWKKTOMUTGLAKCTNPTFYRTYCONEXGYCXTINOGIJKOZGIGSCYVNSHOHKKGZJGDLNCZIDAVNSCQQLWTTQCWPEPUDAGUZSSUPUDLOUNDDUWZVXBGEYJXRXOHKPZPTKNOXVLQXWTOYUEAJTGDWKTTYIOYUEAJTGDWKTHOSKCJKCJDABXKFCRTTVNOIOOKMDSGYPDXAUEIUFKCEOUKWTYQZRPZKZWPEPKFTXDKUCUYTDDSGZRPZAUESKUVSHKFSOXICTXDZGBOGJGYZXYGEYJOCRCDNQVOINCZLJZEUXHOFKBXTICRPZOEVXLGNKHHGKXXICTXDZUKOLNAGXNSCTCWUWRNHUQTOGUTRKIKTHOPHNKDDNGRZSK"

ENCRYPTED_LENGTH = len(ENCRYPTED)
TESS26 = open("data/tess26.txt", "r").readline()

KEY_LENGTH = 5

sameLetterSegments = [ENCRYPTED[i::KEY_LENGTH] for i in range(KEY_LENGTH)]
tess26LetterFrequencies = [kvp[0] for kvp in Counter(TESS26).most_common()]

MOST_FREQUENT_TESS26 = tess26LetterFrequencies[0][0]

counters = [Counter(segment) for segment in sameLetterSegments]
mostCommonLettersInEachSegment = [counter.most_common()[0][0] for counter in counters]

mostCommonLettersInEachSegment[1] = "K"

steps = [ord(MOST_FREQUENT_TESS26) - ord(commonLetter) for commonLetter in mostCommonLettersInEachSegment]

decrypted = [CipherUtils.incrementer(sameLetterSegments[x], steps[x]) for x in range(len(sameLetterSegments))]

finalString = ""
for i in range(len(decrypted[0])):
    for j in range(len(decrypted)):
        finalString += decrypted[j][i]
if finalString in TESS26:
    print("It's been decrypted! Text is: " + finalString)
else:
    print("Decryption failed!  Text is: " + finalString)
